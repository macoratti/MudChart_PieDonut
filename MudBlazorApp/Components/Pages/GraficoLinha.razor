@page "/grafico-linha"
@using MudBlazorApp.Entities
@inject DataService DataService

@if (XAxisLabels != null && Series.Count > 0)
{
    <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index"
              XAxisLabels="@XAxisLabels"
              ChartOptions="new ChartOptions { LineStrokeWidth = 10 }"
              Width="100%"
              Height="450px">
    </MudChart>
    <MudText Typo="Typo.h6" Style="position: absolute; top: 10px; left: 50%; transform: translateX(-50%);">Despesa Salarial por Departamento</MudText>
    <MudText Typo="Typo.h6" Style="position: absolute; top: 10px; left: 30%; transform: translateX(-50%);">Salários (R$)</MudText>
    <MudText Typo="Typo.h6" Style="position: absolute; bottom: -5px; left: 30%; transform: translateX(-50%);">Departamentos</MudText>
}
else
{
    <MudText Typo="Typo.h6">Carregando dados...</MudText>
}
@code {
    private int Index = -1; // Valor padrão não pode ser 0 -> primeiro selectedindex é 0.
    private List<ChartSeries> Series = new List<ChartSeries>();
    private string[]? XAxisLabels;

    protected override async Task OnInitializedAsync()
    {
        var salariosPorDepartamento = await DataService.GetSalariosPorDepartamentoAsync();

        if (salariosPorDepartamento != null && salariosPorDepartamento.Count > 0)
        {
            var departamentos = salariosPorDepartamento.Keys.ToArray();
            var totalSalarios = salariosPorDepartamento.Values.Select(v => (double)v).ToArray(); 

            // Configurar os rótulos do eixo X
            XAxisLabels = departamentos;

            // Criar série para o gráfico de linha
            Series.Add(new ChartSeries
                {
                    Name = "Salários",
                    Data = totalSalarios
                });
        }
    }
}